#include <iostream>
using namespace std;
struct Node
{
    int data;
    Node* left;
    Node* right;
    Node(int value):data(value),left(nullptr),right(nullptr){ }
};
Node* createNode(int value)
{
    return new Node(value);
}
Node* insert(Node* root,int value)
{
    if(root==nullptr)
    {
        return createNode(value);
    }
    if(value < root->data)
    {
        root->left=insert(root->left,value);
    }
    else
    {
        root->right=insert(root->right,value);
    }
    return root;
}
void preorder(Node* root)
{
    if(root==nullptr)
    {
        return;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}
void inorder(Node* root)
{
    if(root==nullptr)
    {
        return;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
void postorder(Node* root)
{
    if(root==nullptr)
    {
        return;
    }
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";

}
int main()
{
    int T;
    cin>>T;
    for(int t=0;t<T;t++)
    {
        int N;
        cin>>N;
        Node* root=nullptr;
        for(int i=0;i<N;i++)
        {
            int value;
            cin>>value;
            root=insert(root, value);
        }
        preorder(root);
        cout << "\n";
        inorder(root);
        cout << "\n";
        postorder(root);        
        cout << "\n";
        if (t < T - 1)
        {
            cout << "\n";
        }
    }
    return 0;
}
